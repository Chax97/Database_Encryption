void addCrim(criminal_t criminals[], int crimCount)
{
    if(crimCount>MAX_NUM_OF_CRIMINALS)
    {
        printf("Database memory full.\nExiting...\n");
        return;
    }
    char fn[MAX_NAME_LEN];
    char ln[MAX_NAME_LEN];

    printf("\n<<< ADD CRIMINAL TO DATABASE >>>\n");
    printf("You are now entering a criminal into the database, please enter\nrequested information in the following fields. The input arguments are presented in [square brackets]:\n");
    printf("\nCriminal name and sex:\n");
    printf("├─ Enter first name > ");
    printf("\033[1;31m");
    scanf(" %s", fn);
    printf("\033[0m");
    strcpy(criminals[crimCount].firstName, fn);
    printf("├─ Enter last name > ");
    printf("\033[1;31m");
    scanf(" %s", ln);
    printf("\033[0m");
    strcpy(criminals[crimCount].lastName, ln);

    while(1)
    {
        char ch;
        printf("└─ Enter sex [M/F] > ");
        scanf(" %c[\n]\n", &ch);
        if(ch=='M' || ch=='F')
        {
            criminals[crimCount].physique.sex = ch;
            break;
        }
        else
        {
            printf("├─ ERROR: Invalid input...");
            continue;
        }
        printf("\n");
    }
    
    int x;
    while(1)
    {
        printf("\nCriminal D.O.B information:\n");
        printf("├─ Enter numerical day of birth [1-31] > ");
        scanf(" %d[\n]\n", &criminals[crimCount].dob.day);
        printf("├─ Enter numerical month of birth [1-12]  > ");
        scanf(" %d[\n]\n", &criminals[crimCount].dob.month);
        printf("└─ Enter year of birth [0-2020] > ");
        scanf(" %d[\n]\n", &criminals[crimCount].dob.year);
    
        x = dateIsValid(criminals[crimCount].dob.day, 
        criminals[crimCount].dob.month, 
        criminals[crimCount].dob.year);
        if (x == 0) 
        {
            printf("├─ ERROR: Date is invalid \n");
            continue;
        }
        else
        {
            break;
        }
    }  
    /* dateIsValid(criminals[crimCount]);*/

    printf("\nSelect criminal status of %s %s [1-3]:\n", criminals[crimCount].firstName, criminals[crimCount].lastName);
    while(1)
    {
        printf("1. Fugitive\n2. Incarcerated\n3. Released\n");
        printf("> ");
        int status;
        scanf(" %d[\n]\n", &status);
        if(status==1)
        {
            char inputStatus[] = "Fugitive";
            strcpy(criminals[crimCount].currentStatus, inputStatus);
            printf("Criminal has been registered as a fugitive\n");
            break;
        }
        if(status==2)
        {
            char inputStatus[] = "Incarcerated";
            strcpy(criminals[crimCount].currentStatus, inputStatus);
            printf("Criminal has been registered as incarcerated\n");
            break;
        }
        if(status==3)
        {
            char inputStatus[] = "Released";
            strcpy(criminals[crimCount].currentStatus, inputStatus);
            printf("Criminal has been registered as released\n");
            break;
        }
        else
        {
            printf("\nInvalid input, please select from 1-3\n");
            continue;
        }
    }
    
    printf("\nCriminal phisique details:\n");
    printf("├─ Enter height> ");
    scanf(" %d[\n]\n", &criminals[crimCount].physique.height);
    /*
    printf("└─ Enter features (criminal specific features, e.g. tattoos/bald/etc...)\n");
    printf("[max %d characters, or enter '*' to skip this field]\n> ", MAX_FEATURES_LEN);
    char string[MAX_FEATURES_LEN];
    scanf(" %s", string);
    if(string[0]=='*'){
        strcpy(criminals[crimCount].physique.features, "N\\A");
    }
    else{
        strcpy(criminals[crimCount].physique.features, string);
    }*/
            
    /*do{*/
    printf("\nEnter Residential Address information:\n");
    printf("├─ Enter street number > ");
    scanf(" %d[\n]", &criminals[crimCount].resAddress.streetNumber);
    printf("├─ Enter street name > ");
    scanf("%s[\n]\n", criminals[crimCount].resAddress.streetName);
    printf("├─ Enter Suburb > ");
    scanf("%s[\n]\n", criminals[crimCount].resAddress.suburb);        
    printf("└─ Enter state > ");
    scanf("%s[\n]\n", criminals[crimCount].resAddress.state);
    
    /*int y = addressIsValid(criminals[crimCount].resAddress);
    if (y == 0) {
            printf("\n Residential Address is invalid \n");
        }
    } while (y == 0);*/
    
    printf("\nEnter occupation > ");
    scanf(" %s[\n]\n", criminals[crimCount].occupation);

    printf("\nCriminal history information:\n");
    int chargeNo=0;
    char addChoice;
    while(1)
    {
        printf("Current number of registered offences under %s %s is %d", fn, ln, chargeNo);
        printf("\nWould you like to register an offence? [Y/N] > ");          
        scanf(" %c\n", &addChoice);
        
        if(addChoice == 'Y')
        {
            /*
            criminals[crimCount].crimHistory[chargeNo].chargeNo=chargeNo;
            printf("├─ Enter summary of offence #%d [max %d characters]> ",chargeNo, MAX_CHARGE_LEN);
            scanf(" %s[\n]\n", criminals[crimCount].crimHistory[chargeNo].charge);
            */
            int a;
            while(1)
            {
                printf("├─ Enter date of offense:\n");
                printf("    ├─ Enter numerical day of occurence [1-31] > ");
                scanf(" %d[\n]\n", &criminals[crimCount].crimHistory[chargeNo].occurrence.day);
                printf("    ├─ Enter numerical month of occurence [1-12]  > ");
                scanf(" %d[\n]\n", &criminals[crimCount].crimHistory[chargeNo].occurrence.month);
                printf("    └─ Enter year of occurence [0-2020] > ");
                scanf(" %d[\n]\n", &criminals[crimCount].crimHistory[chargeNo].occurrence.year);
            
                a = dateIsValid(criminals[crimCount].dob.day, 
                criminals[crimCount].dob.month, 
                criminals[crimCount].dob.year);
                if (a == 0) 
                {
                    printf("├─ ERROR: Date is invalid \n");
                    continue;
                }
                else
                {
                    break;
                }
            }   
            /*do{*/
            printf("\nEnter location of offence information:\n");
            printf("  ├─ Enter StreetName > ");
            scanf(" %s[\n]\n", criminals[crimCount].crimHistory[chargeNo].crimLocation.streetName);
            printf("  └─ Enter Suburb > ");
            scanf(" %s[\n]\n",criminals[crimCount].crimHistory[chargeNo].crimLocation.suburb);  
            
            /*int z = addressIsValid(criminals[crimCount].crimLocation);
            if (z == 0) {
                        printf("\n criminal Location is invalid \n");
                        }
            } while (z == 0);*/
/*
            printf("├─ Enter name of officer who charged criminal > ");
            scanf(" %s[\n]\n", criminals[crimCount].crimHistory[chargeNo].officer);
*/
            printf("├─ Enter brief description of offence > ");
            scanf(" %s[\n]\n", criminals[crimCount].crimHistory[chargeNo].descrip);
/*
            printf("├─ Enter officer statement > ");
            scanf(" %s[\n]\n", criminals[crimCount].crimHistory[chargeNo].offStatement);

            printf("├─ Enter victim statement > ");
            scanf(" %s[\n]\n", criminals[crimCount].crimHistory[chargeNo].victStatement);

            printf("├─ Enter witness statement > ");
            scanf(" %s[\n]\n", criminals[crimCount].crimHistory[chargeNo].witnStatement);

            printf("└─ Enter names of individuals involved > ");
            scanf(" %s[\n]\n", criminals[crimCount].crimHistory[chargeNo].whoInvolved);
*/          
            chargeNo++;
            continue;
        }
        else if(addChoice=='N')
        {
            break;
        }
        else if(addChoice!='Y'||addChoice!='N')
        {
            printf("ERROR: Invalid input. Please enter 'Y' or 'N'.\n");
            continue;
        }
    }
    printf("\n");
    printf("<<< CRIMINAL INFORMATION STORED >>>\nInformation for criminal: \033[1;31mID# %02d\033[0m \033[1;31m%s %s\033[0m has been added to the database with %d offences.\n",crimCount, fn, ln, chargeNo);
}
